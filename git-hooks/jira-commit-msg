#!/bin/bash
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

#test "" = "$(grep '^Signed-off-by: ' "$1" |
#	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
#	echo >&2 Duplicate Signed-off-by lines.
#	exit 1
#}

if [ $# -eq 0 ]
then
  echo "Hook para validacao de mensagens do git."
  echo "Para aplica-lo ao seu projeto execute:"
  echo "ln -s $0 <Dir do seu projeto>/.git/hooks/commit-msg"
  echo ""
  echo "Verificacoes: "
  cat $0 | grep "^#--- " | sed  "s/^#--//"
  exit 1
fi

# Suite de testes para o script
TMP="/tmp/hooktest.tmp"
function assertMsgReturn() {
  RET_EXPECTED=$1
  TEST_MSG=$2
  echo "$TEST_MSG" > $TMP

  $0 $TMP
  RET_ACTUAL=$?
  if [ $RET_ACTUAL -ne $RET_EXPECTED ]
  then
    echo "Esperado $RET_EXPECTED mas retornou $RET_ACTUAL"
    echo "Mensagem:"
    cat $TMP
    rm -f $TMP
    exit 1
  else
    echo "Teste OK"
  fi
  rm -f $TMP

}

if [ "$1" == "--test" ]
then

# Mensagem sem qualquer codigo de issue
  assertMsgReturn 1 \
"bla bla    
ble ble 
bli bli"

# Mensagem com codigo de issue
  assertMsgReturn 0 \
"bla bla    
ble ble 
bli #PROJETO-12"

# Mensagem com codigo de issue errado
  assertMsgReturn 1 \
"bla bla    
ble ble 
bli #PROJETO-122d"

# Mensagem com codigo de issue errado
  assertMsgReturn 1 \
"bla bla    
ble ble 
bli PROJETO-122"

# Mensagem com codigo de issue errado
  assertMsgReturn 1 \
"bla bla    
ble ble 
bli s#PROJETO-122
asda dsadas"



# Mensagem com outro codigo de issue
  assertMsgReturn 0 \
"bla bla    
ble ble 
bli #PROJ-1222 lalala"

# Mensagem com outro codigo de issue com letras no nome do projeto
  assertMsgReturn 0 \
"bla bla    
ble ble 
bli #PROJ99-1222 lalala"

# Mensagem com outro codigo de issue com letras no nome do projeto
  assertMsgReturn 0 \
"bla bla    
ble ble 
bli #123PROJ-122 lalala"

exit 0
fi

#--- Verifica se a mensagem contem o numero da issue
bldred='\e[1;31m' # Red
bldylw='\e[1;33m' # Yellow
txtblu='\e[0;34m' # Blue
txtrst='\e[0m'    # Text Reset
grep -w "#[A-Z0-9]\{1,\}-[0-9]\{1,\}" $1 > /dev/null || {
  echo -en $bldred
  echo "Noooooooo!!!"
  echo "COMMIT NAO EFETUADO!"
  echo -en $bldylw
  echo "Ae fera! Coloca a issue ai! Formato #SEUPROJETO-999"
  echo -en $txtblu
  echo "Se não quiser colocar mesmo, faça o commit com a opcao --no-verify"
  echo -en $txtrst
  exit 1
}

